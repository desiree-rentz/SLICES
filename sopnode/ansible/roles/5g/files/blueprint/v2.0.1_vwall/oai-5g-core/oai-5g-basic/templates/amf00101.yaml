apiVersion: v1
kind: ConfigMap
metadata:
  name: oai-amf-00101
data:
  config.yaml: |
    ############# Common configuration
    
    # Log level for all the NFs
    log_level:
      general: info
    
    # If you enable registration, the other NFs will use the NRF discovery mechanism
    register_nf:
      general: yes
    
    http_version: 2
    
    ## general single_nssai configuration
    ## Defines YAML anchors, which are reused in the config file
    snssais:
      - &slice_inria
        sst: 1
        sd: 000001 # in hex
      - &slice_r2lab
        sst: 1
        sd: 000002 # in hex
      - &slice_eurecom
        sst: 1
        sd: 000003 # in hex
      - &slice_tp
        sst: 1
        sd: 000004 # in hex
    
    ############## SBI Interfaces
    ### Each NF takes its local SBI interfaces and remote interfaces from here, unless it gets them using NRF discovery mechanisms
    nfs:
      amf:
        host: 172.31.10.200 # oai-amf
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
        n2:
          interface_name: n2
          port: 38412
      smf:
        host: 172.31.10.202 # oai-smf
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
        n4:
          interface_name: n4
          port: 8805
      upf:
        host: oai-upf
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
        n3:
          interface_name: n3
          port: 2152
        n4:
          interface_name: n4
          port: 8805
        n6:
          interface_name: n6
        n9:
          interface_name: eth0
          port: 2152
      udm:
        host: oai-udm
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
      udr:
        host: oai-udr
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
      ausf:
        host: oai-ausf
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
      nrf:
        host: 172.31.10.203 # oai-nrf
        sbi:
          port: 80
          api_version: v1
          interface_name: eth0
    
    #### Common for UDR and AMF
    database:
      host: mysql
      user: test
      type: mysql
      password: test
      database_name: oai_db
      generate_random: true
      connection_timeout: 300 # seconds
    
    ############## NF-specific configuration
    amf:
      amf_name: "OAI-AMF"
      # This really depends on if we want to keep the "mini" version or not
      support_features_options:
        enable_simple_scenario: no # "no" by default with the normal deployment scenarios with AMF/SMF/UPF/AUSF/UDM/UDR/NRF.
                                   # set it to "yes" to use with the minimalist deployment scenario (including only AMF/SMF/UPF) by using the internal AUSF/UDM implemented inside AMF.
                                   # There's no NRF in this scenario, SMF info is taken from "nfs" section.
        enable_nssf: no
        enable_smf_selection: yes
      relative_capacity: 30
      statistics_timer_interval: 20  # in seconds
      emergency_support: false
      served_guami_list:
        - mcc: 001
          mnc: 01
          amf_region_id: 01
          amf_set_id: 001
          amf_pointer: 01
      plmn_support_list:
        - mcc: 001
          mnc: 01
          tac: 0x0001
          nssai:
            - *slice_inria
            - *slice_r2lab
            - *slice_tp
      supported_integrity_algorithms:
        - "NIA1"
        - "NIA2"
      supported_encryption_algorithms:
        - "NEA0"
        - "NEA1"
        - "NEA2"
